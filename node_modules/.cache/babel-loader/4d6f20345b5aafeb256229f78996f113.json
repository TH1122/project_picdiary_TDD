{"ast":null,"code":"var _jsxFileName = \"/Users/taehyungkim/Desktop/self-study/Project_PicDiary/pic_diary/src/components/Toggle.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styled from 'styled-components'; //#8b8b8b\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToggleContainer = styled.div`\n  position: relative;\n  margin-top: 8rem;\n  left: 47%;\n  cursor: pointer;\n\n  > .toggle-container {\n    width: 50px;\n    height: 24px;\n    border-radius: 30px;\n    background-color: #8b8b8b;\n    // TODO : .toggle--checked 클래스가 활성화 되었을 경우의 CSS를 구현합니다.\n  }\n\n  > .toggle-container.toggle--checked{\n    width: 50px;\n    height: 24px;\n    border-radius: 30px;\n    background-color: #4000c7;\n    // TODO : .toggle--checked 클래스가 활성화 되었을 경우의 CSS를 구현합니다.\n  }\n\n  > .toggle-circle {\n    transition: all 0.5s ease;\n    position: absolute;\n    top: 1px;\n    left: 1px;\n    width: 22px;\n    height: 22px;\n    border-radius: 50%;\n    background-color: #ffffff;\n    // TODO : .toggle--checked 클래스가 활성화 되었을 경우의 CSS를 구현합니다.\n  }\n\n  > .toggle-circle.toggle--checked {\n    transition: all 0.5s ease;\n    position: absolute;\n    top: 1px;\n    left: 27px;\n    width: 22px;\n    height: 22px;\n    border-radius: 50%;\n    background-color: #ffffff;\n    // TODO : .toggle--checked 클래스가 활성화 되었을 경우의 CSS를 구현합니다.\n  }\n`;\n_c = ToggleContainer;\nconst Desc = styled.div`\nposition: relative;\nleft: 47%;\n`;\nexport const Toggle = () => {\n  _s();\n\n  const [isOn, setisOn] = useState(false);\n\n  const toggleHandler = () => {\n    setisOn(!isOn);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToggleContainer, {\n      onClick: toggleHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: isOn ? 'toggle-container toggle--checked' : 'toggle-container'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isOn ? 'toggle-circle toggle--checked' : 'toggle-circle'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), isOn ? 'Toggle Switch ON' : 'Toggle Switch OFF']\n  }, void 0, true);\n};\n\n_s(Toggle, \"KGOahal+fTALx46Eqg8qydCEI+s=\");\n\n_c2 = Toggle;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToggleContainer\");\n$RefreshReg$(_c2, \"Toggle\");\nToggle.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Toggle\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Toggle.js\"] = {\n    name: \"Toggle\",\n    docgenInfo: Toggle.__docgenInfo,\n    path: \"src/components/Toggle.js\"\n  };\n}","map":{"version":3,"names":["useState","styled","ToggleContainer","div","Desc","Toggle","isOn","setisOn","toggleHandler"],"sources":["/Users/taehyungkim/Desktop/self-study/Project_PicDiary/pic_diary/src/components/Toggle.js"],"sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\n\n\n//#8b8b8b\nconst ToggleContainer = styled.div`\n  position: relative;\n  margin-top: 8rem;\n  left: 47%;\n  cursor: pointer;\n\n  > .toggle-container {\n    width: 50px;\n    height: 24px;\n    border-radius: 30px;\n    background-color: #8b8b8b;\n    // TODO : .toggle--checked 클래스가 활성화 되었을 경우의 CSS를 구현합니다.\n  }\n\n  > .toggle-container.toggle--checked{\n    width: 50px;\n    height: 24px;\n    border-radius: 30px;\n    background-color: #4000c7;\n    // TODO : .toggle--checked 클래스가 활성화 되었을 경우의 CSS를 구현합니다.\n  }\n\n  > .toggle-circle {\n    transition: all 0.5s ease;\n    position: absolute;\n    top: 1px;\n    left: 1px;\n    width: 22px;\n    height: 22px;\n    border-radius: 50%;\n    background-color: #ffffff;\n    // TODO : .toggle--checked 클래스가 활성화 되었을 경우의 CSS를 구현합니다.\n  }\n\n  > .toggle-circle.toggle--checked {\n    transition: all 0.5s ease;\n    position: absolute;\n    top: 1px;\n    left: 27px;\n    width: 22px;\n    height: 22px;\n    border-radius: 50%;\n    background-color: #ffffff;\n    // TODO : .toggle--checked 클래스가 활성화 되었을 경우의 CSS를 구현합니다.\n  }\n`;\n\nconst Desc = styled.div`\nposition: relative;\nleft: 47%;\n`;\n\nexport const Toggle = () => {\n  const [isOn, setisOn] = useState(false);\n\n  const toggleHandler = () => {\n    setisOn(!isOn)\n  };\n\n  return (\n    <>\n      <ToggleContainer\n        onClick={toggleHandler}\n      >\n        {/* TODO : 아래에 div 엘리먼트 2개가 있습니다. 각각의 클래스를 'toggle-container', 'toggle-circle' 로 지정하세요. */}\n        {/* TIP : Toggle Switch가 ON인 상태일 경우에만 toggle--checked 클래스를 div 엘리먼트 2개에 모두 추가합니다. 조건부 스타일링을 활용하세요. */}\n        <div className={isOn? 'toggle-container toggle--checked' :'toggle-container'} />\n        <div className={isOn? 'toggle-circle toggle--checked' :'toggle-circle'} />\n      </ToggleContainer>\n      {/* TODO : Desc 컴포넌트를 활용해야 합니다. */}\n      {(isOn)?'Toggle Switch ON':'Toggle Switch OFF'}\n    </>\n  );\n};"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAGA;;;;AACA,MAAMC,eAAe,GAAGD,MAAM,CAACE,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7CA;KAAMD,e;AA+CN,MAAME,IAAI,GAAGH,MAAM,CAACE,GAAI;AACxB;AACA;AACA,CAHA;AAKA,OAAO,MAAME,MAAM,GAAG,MAAM;EAAA;;EAC1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;;EAEA,MAAMQ,aAAa,GAAG,MAAM;IAC1BD,OAAO,CAAC,CAACD,IAAF,CAAP;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE,QAAC,eAAD;MACE,OAAO,EAAEE,aADX;MAAA,wBAKE;QAAK,SAAS,EAAEF,IAAI,GAAE,kCAAF,GAAsC;MAA1D;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QAAK,SAAS,EAAEA,IAAI,GAAE,+BAAF,GAAmC;MAAvD;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAUIA,IAAD,GAAO,kBAAP,GAA0B,mBAV7B;EAAA,gBADF;AAcD,CArBM;;GAAMD,M;;MAAAA,M"},"metadata":{},"sourceType":"module"}