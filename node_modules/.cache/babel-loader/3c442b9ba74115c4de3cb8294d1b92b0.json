{"ast":null,"code":"var _jsxFileName = \"/Users/taehyungkim/Desktop/self-study/Project_PicDiary/pic_diary/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PicCategory from \"./PicCategory\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    picData\n  } = _ref;\n  const [categories, setCategories] = useState([]);\n  const [categoryData, setCategoryData] = useState({});\n  useEffect(() => {\n    //임시로 카테고리 추가\n    // setCategories([\"데이트\", \"김코딩과 함께한 날\"]);\n    fetch(\"http://localhost:3001/categories/\").then(res => {\n      if (!res.ok) {\n        throw Error(\"could not fetch the data for that resource\");\n      }\n\n      return res.json();\n    }).then(data => {\n      let category = data.map(el => el.category);\n      console.log(category);\n    });\n  }, []); // useEffect(() => {\n  //   //카테고리데이터가 배열일 경우\n  //   categories.forEach((el) => {\n  //     categoryData.push([el, []]);\n  //   });\n  //   setCategoryData(categoryData);\n  // }, [categories]);\n  // useEffect(() => {\n  //   // 카테고리데이터가 배열일 경우\n  //   picData.forEach((el) => {\n  //     el.content.forEach((content) => {\n  //       if (categories.includes(content.category)) {\n  //         categoryData[categories.indexOf(content.category)][1].push({\n  //           date: el.date,\n  //           picture: content.picture,\n  //           text: content.text,\n  //           title: el.title,\n  //         });\n  //       }\n  //     });\n  //   });\n  //   setCategoryData(categoryData);\n  // }, [categories]);\n\n  useEffect(() => {\n    //카테고리데이터가 객체일 경우\n    categories.forEach(el => {\n      categoryData[el] = [];\n    });\n    setCategoryData(categoryData);\n  }, [categories]);\n  useEffect(() => {\n    // 카테고리데이터가 객체일 경우\n    picData.forEach(el => {\n      el.content.forEach(content => {\n        if (categories.includes(content.category)) {\n          categoryData[content.category].push({\n            date: el.date,\n            picture: content.picture,\n            text: content.text,\n            title: el.title\n          });\n        }\n      });\n    });\n    setCategoryData(categoryData);\n  }, [categories]);\n  console.log(categoryData, \"categoryData\");\n  console.log(categories, \"categories\");\n  const CategoryContainer = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  `;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CategoryContainer, {\n      children: categories.map((el, idx) => {\n        return /*#__PURE__*/_jsxDEV(PicCategory, {\n          categoryData: categoryData,\n          category: el\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"S86dV8VoWenFfMovWTRLfWbyDQI=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","PicCategory","styled","Home","picData","categories","setCategories","categoryData","setCategoryData","fetch","then","res","ok","Error","json","data","category","map","el","console","log","forEach","content","includes","push","date","picture","text","title","CategoryContainer","section","idx"],"sources":["/Users/taehyungkim/Desktop/self-study/Project_PicDiary/pic_diary/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PicCategory from \"./PicCategory\";\nimport styled from \"styled-components\";\n\nconst Home = ({ picData }) => {\n  const [categories, setCategories] = useState([]);\n  const [categoryData, setCategoryData] = useState({});\n  useEffect(() => {\n    //임시로 카테고리 추가\n    // setCategories([\"데이트\", \"김코딩과 함께한 날\"]);\n    fetch(\"http://localhost:3001/categories/\")\n      .then((res) => {\n        if (!res.ok) {\n          throw Error(\"could not fetch the data for that resource\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        let category = data.map((el) => el.category);\n        console.log(category);\n      });\n  }, []);\n\n  // useEffect(() => {\n  //   //카테고리데이터가 배열일 경우\n  //   categories.forEach((el) => {\n  //     categoryData.push([el, []]);\n  //   });\n  //   setCategoryData(categoryData);\n  // }, [categories]);\n\n  // useEffect(() => {\n  //   // 카테고리데이터가 배열일 경우\n  //   picData.forEach((el) => {\n  //     el.content.forEach((content) => {\n  //       if (categories.includes(content.category)) {\n  //         categoryData[categories.indexOf(content.category)][1].push({\n  //           date: el.date,\n  //           picture: content.picture,\n  //           text: content.text,\n  //           title: el.title,\n  //         });\n  //       }\n  //     });\n  //   });\n  //   setCategoryData(categoryData);\n  // }, [categories]);\n\n  useEffect(() => {\n    //카테고리데이터가 객체일 경우\n    categories.forEach((el) => {\n      categoryData[el] = [];\n    });\n    setCategoryData(categoryData);\n  }, [categories]);\n\n  useEffect(() => {\n    // 카테고리데이터가 객체일 경우\n    picData.forEach((el) => {\n      el.content.forEach((content) => {\n        if (categories.includes(content.category)) {\n          categoryData[content.category].push({\n            date: el.date,\n            picture: content.picture,\n            text: content.text,\n            title: el.title,\n          });\n        }\n      });\n    });\n    setCategoryData(categoryData);\n  }, [categories]);\n\n  console.log(categoryData, \"categoryData\");\n  console.log(categories, \"categories\");\n\n  const CategoryContainer = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  `;\n  return (\n    <>\n      <CategoryContainer>\n        {categories.map((el, idx) => {\n          return (\n            <PicCategory key={idx} categoryData={categoryData} category={el} />\n          );\n        })}\n      </CategoryContainer>\n    </>\n  );\n};\n\nexport default Home;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AAEA,MAAMC,IAAI,GAAG,QAAiB;EAAA;;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAC5B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;EACAC,SAAS,CAAC,MAAM;IACd;IACA;IACAS,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAAS;MACb,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;QACX,MAAMC,KAAK,CAAC,4CAAD,CAAX;MACD;;MACD,OAAOF,GAAG,CAACG,IAAJ,EAAP;IACD,CANH,EAOGJ,IAPH,CAOSK,IAAD,IAAU;MACd,IAAIC,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAAUC,EAAD,IAAQA,EAAE,CAACF,QAApB,CAAf;MACAG,OAAO,CAACC,GAAR,CAAYJ,QAAZ;IACD,CAVH;EAWD,CAdQ,EAcN,EAdM,CAAT,CAH4B,CAmB5B;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAhB,SAAS,CAAC,MAAM;IACd;IACAK,UAAU,CAACgB,OAAX,CAAoBH,EAAD,IAAQ;MACzBX,YAAY,CAACW,EAAD,CAAZ,GAAmB,EAAnB;IACD,CAFD;IAGAV,eAAe,CAACD,YAAD,CAAf;EACD,CANQ,EAMN,CAACF,UAAD,CANM,CAAT;EAQAL,SAAS,CAAC,MAAM;IACd;IACAI,OAAO,CAACiB,OAAR,CAAiBH,EAAD,IAAQ;MACtBA,EAAE,CAACI,OAAH,CAAWD,OAAX,CAAoBC,OAAD,IAAa;QAC9B,IAAIjB,UAAU,CAACkB,QAAX,CAAoBD,OAAO,CAACN,QAA5B,CAAJ,EAA2C;UACzCT,YAAY,CAACe,OAAO,CAACN,QAAT,CAAZ,CAA+BQ,IAA/B,CAAoC;YAClCC,IAAI,EAAEP,EAAE,CAACO,IADyB;YAElCC,OAAO,EAAEJ,OAAO,CAACI,OAFiB;YAGlCC,IAAI,EAAEL,OAAO,CAACK,IAHoB;YAIlCC,KAAK,EAAEV,EAAE,CAACU;UAJwB,CAApC;QAMD;MACF,CATD;IAUD,CAXD;IAYApB,eAAe,CAACD,YAAD,CAAf;EACD,CAfQ,EAeN,CAACF,UAAD,CAfM,CAAT;EAiBAc,OAAO,CAACC,GAAR,CAAYb,YAAZ,EAA0B,cAA1B;EACAY,OAAO,CAACC,GAAR,CAAYf,UAAZ,EAAwB,YAAxB;EAEA,MAAMwB,iBAAiB,GAAG3B,MAAM,CAAC4B,OAAQ;AAC3C;AACA;AACA;AACA;AACA,GALE;EAMA,oBACE;IAAA,uBACE,QAAC,iBAAD;MAAA,UACGzB,UAAU,CAACY,GAAX,CAAe,CAACC,EAAD,EAAKa,GAAL,KAAa;QAC3B,oBACE,QAAC,WAAD;UAAuB,YAAY,EAAExB,YAArC;UAAmD,QAAQ,EAAEW;QAA7D,GAAkBa,GAAlB;UAAA;UAAA;UAAA;QAAA,QADF;MAGD,CAJA;IADH;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAWD,CAzFD;;GAAM5B,I;;KAAAA,I;AA2FN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}