{"version":3,"file":"main.d049970c3ae49dfeb8d1.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;;AALA;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;AA+CA;AACA;AACA;AACA;AAEA;AAAA;;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;;AArBA;;AAAA","sources":["webpack://pic_diary/./src/UI_components/PicHome.js","webpack://pic_diary/./src/components/Toggle.js"],"sourcesContent":["import React from \"react\";\nimport styled from 'styled-components';\n\nconst PicContainer = styled.div`\n  background-color: #f2f2f2;\n\n  > .toggle-container {\n    width: 300px;\n    height: 300px;\n    background-color: #404040;\n  }\n`;\n\nconst PicHome = () => {\n    return (\n        <PicContainer>\n        </PicContainer>\n    )\n}\nexport default PicHome;","import { useState } from 'react';\nimport styled from 'styled-components';\n\n\n//#8b8b8b\nconst ToggleContainer = styled.div`\n  position: relative;\n  margin-top: 8rem;\n  left: 47%;\n  cursor: pointer;\n\n  > .toggle-container {\n    width: 50px;\n    height: 24px;\n    border-radius: 30px;\n    background-color: #8b8b8b;\n    // TODO : .toggle--checked 클래스가 활성화 되었을 경우의 CSS를 구현합니다.\n  }\n\n  > .toggle-container.toggle--checked{\n    width: 50px;\n    height: 24px;\n    border-radius: 30px;\n    background-color: #4000c7;\n    // TODO : .toggle--checked 클래스가 활성화 되었을 경우의 CSS를 구현합니다.\n  }\n\n  > .toggle-circle {\n    transition: all 0.5s ease;\n    position: absolute;\n    top: 1px;\n    left: 1px;\n    width: 22px;\n    height: 22px;\n    border-radius: 50%;\n    background-color: #ffffff;\n    // TODO : .toggle--checked 클래스가 활성화 되었을 경우의 CSS를 구현합니다.\n  }\n\n  > .toggle-circle.toggle--checked {\n    transition: all 0.5s ease;\n    position: absolute;\n    top: 1px;\n    left: 27px;\n    width: 22px;\n    height: 22px;\n    border-radius: 50%;\n    background-color: #ffffff;\n    // TODO : .toggle--checked 클래스가 활성화 되었을 경우의 CSS를 구현합니다.\n  }\n`;\n\nconst Desc = styled.div`\nposition: relative;\nleft: 47%;\n`;\n\nexport const Toggle = () => {\n  const [isOn, setisOn] = useState(false);\n\n  const toggleHandler = () => {\n    setisOn(!isOn)\n  };\n\n  return (\n    <>\n      <ToggleContainer\n        onClick={toggleHandler}\n      >\n        {/* TODO : 아래에 div 엘리먼트 2개가 있습니다. 각각의 클래스를 'toggle-container', 'toggle-circle' 로 지정하세요. */}\n        {/* TIP : Toggle Switch가 ON인 상태일 경우에만 toggle--checked 클래스를 div 엘리먼트 2개에 모두 추가합니다. 조건부 스타일링을 활용하세요. */}\n        <div className={isOn? 'toggle-container toggle--checked' :'toggle-container'} />\n        <div className={isOn? 'toggle-circle toggle--checked' :'toggle-circle'} />\n      </ToggleContainer>\n      {/* TODO : Desc 컴포넌트를 활용해야 합니다. */}\n      {(isOn)?'Toggle Switch ON':'Toggle Switch OFF'}\n    </>\n  );\n};"],"names":[],"sourceRoot":""}